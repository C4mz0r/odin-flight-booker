continue
@booking.flight
@booking.passengers
@booking
params[:booking][:passengers_attributes].each  do |pass|  puts pass[:email] end 
params[:booking][:passengers_attributes].each  do |pass|  puts pass.second.email end 
params[:booking][:passengers_attributes].each  do |pass|  puts pass.email end 
params[:booking][:passengers_attributes].each |pass| do puts pass.email end 
params[:booking][:passengers_attributes]
params
params[:passengers_attributes]
continue
Flight.last
Booking
params
params[:booking]
params
params[:passengers_attributes]
params[passengers_attributes]
passengers_attributes
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
DateTime.parse(dates[0].to_s).strftime("%B %d, %Y")
DateTime.parse(dates[0].to_s)
DateTime.parse(dates[0].to_s_)
DateTime.parse(dates[0])
DateTime.parse(dates[0].to_s)
dates
continue
DateTime.parse(dates[0].to_s).strftime("%B %d, %Y")
DateTime.parse(dates[0].to_s).strftime(%B %d, %Y")
DateTime.parse(dates[0].to_s).strftime("%Y-%B-%d")
DateTime.parse(dates[0].to_s).strftime("%Y-%M-%d")
DateTime.parse(dates[0].to_s).strftime("%Y-%m-%d")
DateTime.parse(dates[0].to_s)
DateTime.parse(dates[0])
dates[0].to_s
dates[0]
dates
continue
params[:flight]
continue
params
continue
conitnue
params
@flight
@booking
continue
params
continue
params
continue
@flight
flight
params
continue
params
byebug
continue
params
continue
params
continue
@booking.passengers.build
@booking.passengers
@bookign
exit
@booking.passengers.build
@booking.passengers
@booking
exit
@booking.passengers.build
@booking.passengers
@booking
exit
Passenger
@booking.passengers.build
Booking
@booking.passengers.build
@booking
exit
continue
@booking
@booking.passengers
@booking.passengers.build
@booking
@num_passengers
continue
booking_params
Booking
exit
Booking
continue
Booking.new(booking_params).save
Booking.new(booking_params)
params
continue
params[:flight_id]
params
exit
params
continue
params
continue
params
continue
params
continue
params.require(:booking).permit(:flight)
continue
params
continue
booking_params
Booking
@booking
Passenger.all
Passengers.all
booking_params
continue
Passenger.first.flights
Passenger.first
Passenger.first.flight
passenger
Passenger.first.bookings
Booking.passengers
Booking.tickets.all
Flight.first.passengers
Flight.first
@flight
x.save
x = Booking.new(booking_params)
Booking.new(booking_params)
Booking.new
booking_params
continue
params
continue
conitnue
cpmtom
cpmtomie
params
[ara,
continue
params
continue
cpmtomie
continue
params
continue
params
continue
params
continue
params
continue
@booking.passengers
passenger_id
params
continue
params
continue
params
continue
params
continue
params
continue
@booking.passengers.second.asd
@booking.passengers.first.asdf
@booking.passengers.first
@booking.passengers.first.id
@booking.passengers.id
@booking.passengers
@booking.passengers.second
@booking.passengers.first
@booking.passengers
@booking
continue
@booking.passengers
@booking
@num_passengers
continue
@booking.passengers
@booking.passengers.each do puts "Hi" end
@booking.passengers.count
@booking.passengers
continue
@num_passengers
continue
c
continue
params
continue
@booking.passengers
@booking
@bookign
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params
@num_passengers
params
continue
params
continue
params
continue
params
continue
params
byebug
continue
params
continue
params
continue
params
continue
Flight.second
Flight.first
params
continue
params
